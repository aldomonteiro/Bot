{"version":3,"sources":["../../src/tests/Buttons-test.js"],"names":["describe","it","buttons","Buttons","add","text","url","phone","share","assert","deepEqual","type","title","payload","toJSON","fail","e","ok","from","data","event"],"mappings":";;AAAA;;;;AACA;;;;AAGAA,SAAS,SAAT,EAAoB,YAAM;AACxBC,KAAG,SAAH,EAAc,YAAM;AAClB,QAAMC,UAAU,IAAIC,SAAJ,EAAhB;AACAD,YAAQE,GAAR,CAAY,EAACC,MAAM,QAAP,EAAiBC,KAAK,mBAAtB,EAAZ;AACAJ,YAAQE,GAAR,CAAY,EAACC,MAAM,SAAP,EAAkBE,OAAO,eAAzB,EAAZ;AACAL,YAAQE,GAAR,CAAY,EAACI,OAAO,IAAR,EAAZ;;AAEAC,qBAAOC,SAAP,CAAiB,CACf,EAACC,MAAM,SAAP,EAAkBL,KAAK,mBAAvB,EAA4CM,OAAO,QAAnD,EADe,EAEf,EAACD,MAAM,cAAP,EAAuBC,OAAO,SAA9B,EAAyCC,SAAS,eAAlD,EAFe,EAGf,EAACF,MAAM,eAAP,EAHe,CAAjB,EAIGT,QAAQY,MAAR,EAJH;AAKD,GAXD;;AAaAb,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,IAAIC,SAAJ,EAAhB;AACAD,cAAQE,GAAR,CAAY,EAAZ;AACAK,uBAAOM,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVP,uBAAOQ,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUAhB,KAAG,qBAAH,EAA0B,YAAM;AAC9B,QAAI;AACFE,gBAAQe,IAAR,CAAa,CAAC,EAACC,MAAM,EAAP,EAAWd,MAAM,KAAjB,EAAD,EAA0B,EAACc,MAAM,EAAP,EAAWd,MAAM,KAAjB,EAA1B,CAAb;AACAI,uBAAOQ,EAAP,CAAU,kBAAV;AACD,KAHD,CAGE,OAAOD,CAAP,EAAU;AACVP,uBAAOM,IAAP,CAAY,6BAAZ;AACD;AACF,GAPD;;AAUAd,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,IAAIC,SAAJ,EAAhB;AACAD,cAAQE,GAAR,CAAY,EAACgB,OAAO,cAAR,EAAZ;AACAX,uBAAOM,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVP,uBAAOQ,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CA3CD","file":"Buttons-test.js","sourcesContent":["import assert from 'assert';\nimport {Buttons} from '../..';\n\n\ndescribe('Buttons', () => {\n  it('#toJSON', () => {\n    const buttons = new Buttons();\n    buttons.add({text: 'Google', url: 'http://google.com'});\n    buttons.add({text: 'Call us', phone: '+808 63718243'});\n    buttons.add({share: true});\n\n    assert.deepEqual([\n      {type: 'web_url', url: 'http://google.com', title: 'Google'},\n      {type: 'phone_number', title: 'Call us', payload: '+808 63718243'},\n      {type: 'element_share'}\n    ], buttons.toJSON());\n  });\n\n  it('should throw an error', () => {\n    try {\n      const buttons = new Buttons();\n      buttons.add({});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n\n  it('should parse object', () => {\n    try {\n      Buttons.from([{data: [], text: 'sup'}, {data: [], text: 'cat'}]);\n      assert.ok('parsed correctly');\n    } catch (e) {\n      assert.fail('should have thrown an error');\n    }\n  });\n\n\n  it('should throw an error', () => {\n    try {\n      const buttons = new Buttons();\n      buttons.add({event: 'simple-event'});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n});\n"]}