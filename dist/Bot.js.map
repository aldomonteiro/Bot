{"version":3,"sources":["../src/Bot.js"],"names":["time","setTimeout","resolve","wait","Elements","Buttons","QuickReplies","userCache","debug","Bot","verification","_debug","_verification","_marketing","_fields","axios","delete","_token","headers","params","fields","response","result","data","error","message","status","statusText","get","to","method","json","query","access_token","body","recipient","id","text","err","JSON","parse","type","ee","Error","senderAction","sender_action","isTyping","setTyping","console","cache","key","props","fromCache","input","entry","messaging","raw","sender","fetch","fetchUser","postback","isButton","postbackPayload","payload","hasOwnProperty","event","emit","e","read","delivery","mids","optin","param","ref","quick_reply","is_echo","isQuickReply","attachments","_","groupBy","image","images","map","a","url","video","videos","audio","location","coordinates","object","msgStandBy","standby","info","router","Router","use","bodyParser","req","res","send","post","token","marketing","handleMessage","newMarketing","messaging_type","tag","EventEmitter"],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from 'events';\nimport bodyParser from 'body-parser';\nimport { Router } from 'express';\nimport Elements from './Elements.js';\nimport Buttons from './Buttons.js';\nimport QuickReplies from './QuickReplies.js';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport fetch from './libs/fetch';\nimport Debug from 'debug';\n\nexport { Elements, Buttons, QuickReplies };\n\nconst userCache = {};\n\nconst debug = Debug('Bot');\n\nexport async function wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n}\n\nclass Bot extends EventEmitter {\n  static Buttons = Buttons;\n  static Elements = Elements;\n\n  static wait = wait;\n\n  constructor(verification, debug) {\n    super();\n    this._debug = debug;\n    this._verification = verification;\n    this._marketing = false;\n  }\n\n  get marketing() {\n    return this._marketing;\n  }\n\n  set marketing(newMarketing) {\n    this._marketing = newMarketing;\n  }\n\n  async deleteFields(_fields) {\n    try {\n      const response = await axios.delete('https://graph.facebook.com/v2.6/me/messenger_profile?access_token=' + this._token, {\n        headers: { 'Content-Type': 'application/json' },\n        params: {\n          fields: _fields\n        },\n      });\n      return response.result;\n    }\n    catch (error) {\n      if (error.response && error.response.data && error.response.data.error)\n        return error.response.data.error.message;\n      else if (error.response.status && error.response.statusText)\n        return error.response.status + ' - ' + error.response.statusText;\n      else return \"unknown error\";\n    }\n  }\n\n  async getFields(_fields) {\n    try {\n      const response = await axios.get('https://graph.facebook.com/v2.6/me/messenger_profile?access_token=' + this._token, {\n        headers: { 'Content-Type': 'application/json' },\n        params: {\n          fields: JSON.stringify(_fields),\n        },\n      });\n      if (response.data) return response.data;\n      else if (response.result) return response.result;\n      else return response;\n    }\n    catch (error) {\n      if (error.response && error.response.data && error.response.data.error)\n        return error.response.data.error.message;\n      else if (error.response && error.response.status && error.response.statusText)\n        return error.response.status + ' - ' + error.response.statusText;\n      else return \"unknown error\";\n    }\n  }\n\n  async send(to, message) {\n    try {\n      await fetch('https://graph.facebook.com/v2.6/me/messages', {\n        method: 'post',\n        json: true,\n        query: { access_token: this._token },\n        body: { recipient: { id: to }, message }\n      });\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async senderAction(to, senderAction) {\n    try {\n      await fetch('https://graph.facebook.com/v2.6/me/messages', {\n        method: 'post',\n        json: true,\n        query: { access_token: this._token },\n        body: { recipient: { id: to }, sender_action: senderAction }\n      });\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async setTyping(to, isTyping) {\n    const senderAction = isTyping ? 'typing_on' : 'typing_off';\n    this.senderAction(to, senderAction);\n  }\n\n  async startTyping(to) {\n    try {\n      this.setTyping(to, true);\n    } catch (error) {\n      console.error('startTyping error: ', error.message);\n    }\n\n  }\n\n  async stopTyping(to) {\n    this.setTyping(to, false);\n  }\n\n  async fetchUser(id, fields = 'first_name,last_name,profile_pic', cache = false) {\n    const key = id + fields;\n    let props;\n\n    if (cache && userCache[key]) {\n      props = userCache[key];\n      props.fromCache = true;\n    } else {\n      const { body } = await fetch(`https://graph.facebook.com/v2.6/${id}`, {\n        query: { access_token: this._token, fields }, json: true\n      });\n\n      props = body;\n      props.fromCache = false;\n\n      if (cache) {\n        userCache[key] = props;\n      }\n    }\n\n    return props;\n  }\n\n  async handleMessage(input) {\n    const body = JSON.parse(JSON.stringify(input));\n\n    // Get messaging if existis, otherwise gets standby\n    // const message = body.entry[0].messaging\n    //   ? body.entry[0].messaging[0]\n    //   : body.entry[0].standby ? body.entry[0].standby[0] : null;\n\n    const message = body.entry[0].messaging\n      ? body.entry[0].messaging[0]\n      : null;\n\n    if (message) {\n      message.raw = input;\n      if (message.message) {\n        Object.assign(message, message.message);\n        delete message.message;\n      }\n\n      message.sender.fetch = async (fields, cache) => {\n        const props = await this.fetchUser(message.sender.id, fields, cache);\n        Object.assign(message.sender, props);\n        return message.sender;\n      };\n\n      // POSTBACK\n      if (message.postback) {\n        message.isButton = true;\n\n        let postbackPayload = {};\n\n        try {\n          postbackPayload = JSON.parse(message.postback.payload);\n          if (postbackPayload.hasOwnProperty('data')) {\n            message.postback = postbackPayload;\n            message.data = postbackPayload.data;\n            message.event = postbackPayload.event;\n            this.emit('postback', message.event, message, message.data);\n\n            if (postbackPayload.hasOwnProperty('event')) {\n              this.emit(message.event, message, message.data);\n            }\n          }\n        } catch (e) {\n          // console.error('ERROR parsing postback.payload', postbackPayload, e);\n          this.emit(message.postback.payload, message);\n        }\n        return;\n      }\n\n      // READ\n      if (message.read) {\n        this.emit('read', message, message.read);\n        return;\n      }\n\n      // DELIVERY\n      if (message.delivery) {\n        Object.assign(message, message.delivery);\n        message.delivery = message.delivery.mids;\n\n        delete message.delivery.mids;\n\n        this.emit('delivery', message, message.delivery);\n        return;\n      }\n\n      // OPTIN\n      if (message.optin) {\n        message.param = message.optin.ref || true;\n        message.optin = message.param;\n        this.emit('optin', message, message.optin);\n        return;\n      }\n\n      // QUICK_REPLY\n      if (message.quick_reply && !message.is_echo) {\n        let postback = {};\n\n        try {\n          postback = JSON.parse(message.quick_reply.payload) || {};\n        } catch (e) {\n          // ignore\n        }\n\n        message.isQuickReply = true;\n\n        if (postback.hasOwnProperty('data')) {\n          message.postback = postback;\n          message.data = postback.data;\n          message.event = postback.event;\n\n          this.emit('postback', message.event, message, message.data);\n\n          if (postback.hasOwnProperty('event')) {\n            this.emit(message.event, message, message.data);\n          }\n        } else {\n          this.emit('quick-reply', message, message.quick_reply);\n        }\n\n        return;\n      }\n\n      const attachments = _.groupBy(message.attachments, 'type');\n\n      if (attachments.image) {\n        message.images = attachments.image.map(a => a.payload.url);\n      }\n\n      if (attachments.video) {\n        message.videos = attachments.video.map(a => a.payload.url);\n      }\n\n      if (attachments.audio) {\n        message.audio = attachments.audio.map(a => a.payload.url)[0];\n      }\n\n      if (attachments.location) {\n        const location = attachments.location[0];\n        message.location = { ...location, ...location.payload.coordinates };\n        delete message.location.payload;\n      }\n\n      message.object = body.object;\n\n      delete message.attachments;\n\n      this.emit('message', message);\n    } else {\n      const msgStandBy = body.entry[0].standby ? body.entry[0].standby[0] : null;\n      if (msgStandBy) {\n        console.info(`\\x1b[46m Standby\\x1b[0m, text:\\x1b[32m${msgStandBy.message && msgStandBy.message.text}\\x1b[0m`);\n      }\n    }\n  }\n\n  router() {\n    const router = new Router();\n\n    router.use(bodyParser.json());\n\n    router.get('/', (req, res) => {\n      if (req.query['hub.verify_token'] === this._verification) {\n        res.send(req.query['hub.challenge']);\n      } else {\n        res.send('Error, wrong validation token');\n      }\n    });\n\n    router.post('/', (req, res) => {\n      this._token = req.token;\n      this._marketing = req.marketing;\n\n      if (req.body) {\n        this.handleMessage(req.body);\n      }\n      res.send().status(200);\n    });\n\n    return router;\n  }\n\n  static async send_message_tag(token, to, message) {\n    try {\n      await fetch('https://graph.facebook.com/v2.6/me/messages', {\n        method: 'post',\n        json: true,\n        query: { access_token: token },\n        body: {\n          recipient: { id: to },\n          message,\n          messaging_type: 'MESSAGE_TAG',\n          tag: 'SHIPPING_UPDATE'\n        }\n      });\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n\n}\n\nexport { Bot };\n\nexport default Bot;\n"]}