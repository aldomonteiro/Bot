{"version":3,"sources":["../src/Elements.js"],"names":["Elements","_elements","_quickreplies","_listStyle","_buttons","text","image","audio","video","subtext","buttons","isOnlyButtons","Buttons","Array","isArray","from","Error","push","quickreplies","QuickReplies","listStyle","build","length","elements","e","element","title","image_url","subtitle","toJSON","attachment","type","payload","template_type","top_element_style","url","built","quick_replies"],"mappings":"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","file":"Elements.js","sourcesContent":["import Buttons from './Buttons';\nimport QuickReplies from './QuickReplies';\n\nclass Elements {\n  constructor() {\n    this._elements = [];\n    this._quickreplies = null;\n    this._listStyle = null;\n    this._buttons = null;\n  }\n\n  add({ text, image, audio, video, subtext, buttons, isOnlyButtons }) {\n    if (buttons) {\n      if (!(buttons instanceof Buttons)) {\n        if (Array.isArray(buttons)) {\n          buttons = Buttons.from(buttons);\n        } else {\n          throw Error('Unable to parse buttons');\n        }\n      }\n    }\n    if (buttons && isOnlyButtons) {\n      this._buttons = buttons;\n    } else {\n      this._elements.push({ text, image, audio, video, subtext, buttons });\n    }\n    return this;\n  }\n\n  setQuickReplies(quickreplies) {\n    if (quickreplies) {\n      if (!(quickreplies instanceof QuickReplies)) {\n        if (Array.isArray(quickreplies)) {\n          quickreplies = QuickReplies.from(quickreplies);\n        } else {\n          throw Error('Unable to parse quickreplies');\n        }\n      }\n    }\n\n    this._quickreplies = quickreplies;\n  }\n\n  setListStyle(listStyle) {\n    if (listStyle === 'large' || listStyle === 'compact') {\n      this._listStyle = listStyle;\n    } else {\n      throw Error('Valid values for list styles are \"large\" or \"compact\"');\n    }\n  }\n\n  getQuickReplies() {\n    return this._quickreplies;\n  }\n\n  get length() {\n    return this._elements.length;\n  }\n\n  toJSON() {\n    const build = () => {\n      if (this._elements.length > 1) {\n        const elements = [];\n        for (const e of this._elements) {\n          const element = {};\n          if (e.text) element.title = e.text;\n          if (e.image) element.image_url = e.image;\n          if (e.subtext) element.subtitle = e.subtext;\n          if (e.buttons && e.buttons.length) element.buttons = e.buttons.toJSON();\n          elements.push(element);\n        }\n        if (this._listStyle) {\n          if (this._buttons) {\n            const buttons = this._buttons.toJSON();\n            return {\n              attachment: {\n                type: 'template',\n                payload: { template_type: 'list', top_element_style: this._listStyle, elements, buttons }\n              }\n            };\n          } else {\n            return {\n              attachment: {\n                type: 'template',\n                payload: { template_type: 'list', top_element_style: this._listStyle, elements }\n              }\n            };\n          }\n        } else if (!this._listStyle) {\n          return { attachment: { type: 'template', payload: { template_type: 'generic', elements } } };\n        }\n      } else if (this._elements.length === 1) {\n        const e = this._elements[0];\n        const element = {};\n        if (e.text && e.buttons && e.buttons.length && (e.image || e.subtext)) {\n          element.title = e.text;\n          if (e.image) element.image_url = e.image;\n          if (e.subtext) element.subtitle = e.subtext;\n          element.buttons = e.buttons.toJSON();\n          return { attachment: { type: 'template', payload: { template_type: 'generic', elements: [element] } } };\n        } else if (e.text && e.buttons && e.buttons.length) {\n          element.text = e.text;\n          if (e.image) element.image_url = e.image;\n          element.buttons = e.buttons.toJSON();\n          return { attachment: { type: 'template', payload: { template_type: 'button', ...element } } };\n        } else if (e.text) {\n          return { text: e.text };\n        } else if (e.image) {\n          return { attachment: { type: 'image', payload: { url: e.image } } };\n        } else if (e.audio) {\n          return { attachment: { type: 'audio', payload: { url: e.audio } } };\n        } else if (e.video) {\n          return { attachment: { type: 'video', payload: { url: e.video } } };\n        }\n      }\n\n      throw Error('Could not form a message. Have you followed the format?');\n    };\n\n    const built = build();\n\n    if (this._quickreplies && this._quickreplies.length) {\n      built.quick_replies = this._quickreplies.toJSON();\n    }\n\n    return built;\n  }\n}\n\nexport default Elements;\n"]}